version: '3'

services:
  app:
    image: docker-elkstack-APM-Logstash/docker-logstash-elk/demo-app:1.0.0
    build:
      context: docker-logstash-elk/demo-app
      dockerfile: Dockerfile

  filebeat:
    hostname: filebeat
    image: docker-elkstack-APM-Logstashdocker-logstash-elk//filebeat:1.0.0
    build:
      context: docker-logstash-elk/filebeat
      dockerfile: Dockerfile
    volumes:
      # needed to access all docker logs (RDONLY) :
      - "/var/lib/docker/containers:/usr/share/dockerlogs/data:ro"
      # needed to access additional informations about containers
      - "/var/run/docker.sock:/var/run/docker.sock"
    links:
      -logstash

  kibana:
    image: kibana:6.5.2
    environment:
      - "LOGGIN_QUIET=true"
    links:
      - elasticsearch
    port:
    - 5601:5601

  elasticsearch:
    hostname: elasticsearch
    image: docker-elkstack-APM-Logstash/docker-logstash-elk/elasticsearch:1.0.0
    build:
      context: docker-logstash-elk/elasticsearch
      dockerfile: Dockerfile
    environment:
      - cluster.name=docker-elkstack-APM-Logstash-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms256m -Xmx256m"
    ulimits:
        memlock:
          soft: -1
          hard: -1
    ports:
      - 9200:9200
  
  logstash:
    hostname: logstash
    image: docker-elkstack-APM-Logstash/docker-logstash-elk/logstash:1.0.0
    build:
      context: docker-logstash-elk/logstash
      dockerfile: Dockerfile
    ports:
      -5044:5044
    environment:
      LOG_LEVEL: error
    links:
      - elasticsearch
  
  user-microservice:
      image: apm-java/app:1.0.0
      build:
        context: docker-ampserver-stack
        dockerfile: Dockerfile
        args:
          - "JAR_PATH=target/apm-0.0.1-SNAPSHOT.jar"
      environment:
        - "JAR_NAME=apm-0.0.1-SNAPSHOT.jar"
        - "JVM_OPTIONS="
        - "ELASTIC_APM_SERVICE_NAME=user-service"
        - "ELASTIC_APM_APPLICATION_PACKAGES=com.cosmin.tutorials.apm"
        - "ELASTIC_APM_SERVER_URLS=http://apm:8200"
      ports:
        - 8080:8080
      links:
        - apm
        - mysql
  
  apm:
    image: apm-java/apm-server:1.0.0
    build:
      context: docker-apmserver-stack/apm-server
      dockerfile: Dockerfile
    ports:
      - 8200:8200
    links:
      - elasticsearch
      - kibana